import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer

buildscript {
    repositories {
        maven {
            url "https://maven.pkg.jetbrains.space/arematics/p/scu/arematics-core"
            credentials {
                username = "$mavenUser"
                password = "$mavenPassword"
            }
        }
        mavenCentral()
    }

    dependencies {
        classpath "org.owasp:dependency-check-gradle:5.3.2.1"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '6.0.0'apply false
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'maven-publish'
    apply plugin: 'org.owasp.dependencycheck'

    sourceCompatibility = 1.8
    compileJava.options.encoding = 'UTF-8'
    group 'com.arematics'

    repositories {
        maven {
            url "https://maven.pkg.jetbrains.space/arematics/p/scu/arematics-core"
            credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }
        }
        mavenLocal()
        flatDir {
            dirs '../Libs'
        }
        mavenCentral()
    }

    dependencies {

        //Kernel Plugins for all Modules of Arematics
        compileOnly "org.bukkit:PaperSpigot:1.8.8"
        compileOnly  name: 'WorldEdit'
        compileOnly  name: 'WorldGuard'
        compileOnly "com.compheonix:ProtocolLib:1.8.9"
        compileOnly "com.compheonix:PacketWrapper:1.8.9"
        compileOnly "de.tr7zw:NBT-API:1.0"
        compileOnly group: 'com.google.guava', name: 'guava', version: '30.1-jre'

        compileOnly group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
        compileOnly group: 'commons-io', name: 'commons-io', version: '2.8.0'

        compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.18'
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version:  '1.18.18'

        testCompile "org.bukkit:PaperSpigot:1.8.8"
        testCompile group: 'org.mockito', name: 'mockito-inline', version: '3.7.7'
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.0'
        testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
    }

    configurations {
        all*.exclude module : 'spring-boot-starter-logging'
    }

    jar {
        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId = "com.arematics"
                from components.java
            }
        }
        repositories {
            maven {
                url "https://maven.pkg.jetbrains.space/arematics/p/scu/arematics-core"
                credentials {
                    username "$mavenUser"
                    password "$mavenPassword"
                }
            }
        }
    }

    shadowJar {
        archiveVersion.convention("")
        transform(ServiceFileTransformer) {
            path = './META-INF'
            include 'spring.*'
        }
    }

    test {
        useJUnitPlatform()
    }

    def filesToCopy = copySpec{
        from "build/libs/${project.name}-all.jar"
    }

    task copyFileToCityBuild(type:Copy) {
        with filesToCopy
        into rootProject.file('Server/Citybuild/plugins').absolutePath
    }

    copyFileToCityBuild.dependsOn(shadowJar)

    task copyFileToServer(type:Copy) {
        with filesToCopy
        into rootProject.file("Server/${System.getProperty("args")}/plugins").absolutePath
    }
}
